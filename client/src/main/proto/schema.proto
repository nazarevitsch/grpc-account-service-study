syntax = "proto3";

package com.study.grpc.account.client;

option java_multiple_files = true;

message Id {
  int64 id = 1;
}

message Ids {
  repeated int64 ids = 1;
}

message Person {
  optional int64 id = 1;
  optional string first_name = 2;
  optional string last_name = 3;
  optional string email = 4;
  optional int32 age = 5;
  repeated Pet pets = 6;
}

message Persons {
  repeated Person persons = 1;
}

message Pet {
  optional int64 id = 1;
  optional string name = 2;
  optional int64 ownerId = 3;
}

message Order {
  optional int64 id = 1;
  string brand = 2;
  string state = 3;
  optional int32 price = 4;
}

message Orders {
  repeated Order orders = 1;
}

message Empty {}

service PersonService {

  // unary - sync
  rpc create(Person) returns(Person){}

  rpc get(Id) returns(Person){}

  rpc getByIds(Ids) returns(Persons){}

  rpc delete(Id) returns(Empty){};

  // server stream - async
  rpc getPersonsStream(Empty) returns(stream Person){}
}

service OrderService {

  // client stream - async
  rpc create(stream Order) returns(Orders){}

  // bidirectional streaming
  rpc getWithFilter(stream Order) returns(stream Order){}
}
